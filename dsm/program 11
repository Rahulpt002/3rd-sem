import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.linear_model import LinearRegression
from sklearn.datasets import load_iris

# Load the Iris dataset
data = load_iris()
X = data.data  # Features
y = data.target  # Target

# Split the dataset into training and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=2)

# Reshape y_train and y_test if needed (in this case, y doesn't need reshaping)
y_train = y_train.reshape(-1, 1)
y_test = y_test.reshape(-1, 1)

# Initialize the Linear Regression model
classifier = LinearRegression()

# Fit the model on the training data
classifier.fit(X_train, y_train)

# Make predictions on the test data
y_pred = classifier.predict(X_test)

# Calculate and print the mean squared error
mse = mean_squared_error(y_test, y_pred)
print("Mean Squared Error:", mse)

# Calculate and print the R^2 score
r2 = r2_score(y_test, y_pred)
print("R^2 Score:", r2)

# Plot the results (This example only works for 1 feature, Iris has 4 features)
plt.scatter(X_test[:, 0], y_test, color='black')
plt.plot(X_test[:, 0], y_pred, color='blue')
plt.xlabel('Feature 1 (Sepal Length)')
plt.ylabel('Target')
plt.title('Linear Regression on Iris Dataset')
plt.show()